{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/codecamps/codecamps.component.css","webpack:///./src/app/codecamps/codecamps.component.html","webpack:///./src/app/codecamps/codecamps.component.ts","webpack:///./src/app/create-codecamp/create-codecamp.component.css","webpack:///./src/app/create-codecamp/create-codecamp.component.html","webpack:///./src/app/create-codecamp/create-codecamp.component.ts","webpack:///./src/app/entities/codecamp.ts","webpack:///./src/app/entities/speaker.ts","webpack:///./src/app/entities/talk.ts","webpack:///./src/app/services/codecamp.service.ts","webpack:///./src/app/update-codecamp/update-codecamp.component.css","webpack:///./src/app/update-codecamp/update-codecamp.component.html","webpack:///./src/app/update-codecamp/update-codecamp.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CodecampsComponent } from './codecamps/codecamps.component';\nimport { CreateCodecampComponent } from './create-codecamp/create-codecamp.component';\nimport { UpdateCodecampComponent } from './update-codecamp/update-codecamp.component';\n\nconst routes: Routes = [\n  {\n    path: 'codecamps', component: CodecampsComponent\n  },\n  { path: '',\n    redirectTo: '/codecamps',\n    pathMatch: 'full'\n  },\n  {\n    path: 'create', component: CreateCodecampComponent\n  },\n  {\n    path: 'update/:id', component: UpdateCodecampComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n<div class=\\\"app-content\\\" >\\n\\n   \\n    <mat-card>\\n      <button mat-button [matMenuTriggerFor]=\\\"menu\\\">Menu</button>\\n      <mat-menu #menu=\\\"matMenu\\\">\\n        <a routerLink=\\\"/codecamps\\\" mat-menu-item>Codecamps</a>\\n        <a routerLink=\\\"/create\\\" mat-menu-item>Create Codecamp Event</a>\\n      </mat-menu>\\n  \\n    </mat-card>\\n  \\n    <router-outlet></router-outlet>\\n  \\n  \\n  </div>\\n  \"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'codecamp-frontend';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CodecampsComponent } from './codecamps/codecamps.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CreateCodecampComponent } from './create-codecamp/create-codecamp.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { UpdateCodecampComponent } from './update-codecamp/update-codecamp.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatInputModule, MatButtonModule } from '@angular/material';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatNativeDateModule} from '@angular/material';\nimport {MatSelectModule} from '@angular/material/select';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CodecampsComponent,\n    CreateCodecampComponent,\n    UpdateCodecampComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatButtonModule,\n    MatListModule,\n    MatMenuModule,\n    MatCardModule,\n    MatIconModule,\n    MatSnackBarModule,\n    MatExpansionModule,\n    MatSlideToggleModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatSelectModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"/* .mat-list-item:nth-child(odd){\\n    background-color: #efefef;\\n} */\\n\\n.align-right{\\n    display: inline-block;\\n    width:100%;\\n    text-align: right;\\n}\\n\\n.mat-list-item a.spaced{\\n    margin: 10px 10px 0 0;\\n    border-radius: 3px;\\n    padding: 8px;\\n    color: white;\\n    text-decoration: none;\\n    cursor: pointer;\\n}\\n\\n.mat-list-item a.spaced:hover{\\n    box-shadow: 0px 0px 2px 1px rgba(0,0,0,0.4); \\n}\\n\\n.mat-list-item a.danger{\\n    background-color: tomato;\\n}\\n\\n.mat-list-item a.no-danger{\\n    background-color:yellowgreen;\\n}\\n\\n.mat-list-base{\\n    width:100%;\\n}\\n\\ndl {\\n    background: #f9f9f9;\\n    padding: 10px;\\n    margin-bottom: 20px;\\n    margin-left: 0;\\n    width: 100%;\\n  }\\n\\ndt {\\n    font-weight: bold;\\n    margin-left: 0;\\n  }\\n\\ndd {\\n    margin-left: 0;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29kZWNhbXBzL2NvZGVjYW1wcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztHQUVHOztBQUVIO0lBQ0kscUJBQXFCO0lBQ3JCLFVBQVU7SUFDVixpQkFBaUI7QUFDckI7O0FBRUE7SUFDSSxxQkFBcUI7SUFDckIsa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWixZQUFZO0lBQ1oscUJBQXFCO0lBQ3JCLGVBQWU7QUFDbkI7O0FBQ0E7SUFDSSwyQ0FBMkM7QUFDL0M7O0FBQ0E7SUFDSSx3QkFBd0I7QUFDNUI7O0FBQ0E7SUFDSSw0QkFBNEI7QUFDaEM7O0FBRUE7SUFDSSxVQUFVO0FBQ2Q7O0FBRUE7SUFDSSxtQkFBbUI7SUFDbkIsYUFBYTtJQUNiLG1CQUFtQjtJQUNuQixjQUFjO0lBQ2QsV0FBVztFQUNiOztBQUVBO0lBQ0UsaUJBQWlCO0lBQ2pCLGNBQWM7RUFDaEI7O0FBRUE7SUFDRSxjQUFjO0VBQ2hCIiwiZmlsZSI6InNyYy9hcHAvY29kZWNhbXBzL2NvZGVjYW1wcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogLm1hdC1saXN0LWl0ZW06bnRoLWNoaWxkKG9kZCl7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2VmZWZlZjtcbn0gKi9cblxuLmFsaWduLXJpZ2h0e1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB3aWR0aDoxMDAlO1xuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuXG4ubWF0LWxpc3QtaXRlbSBhLnNwYWNlZHtcbiAgICBtYXJnaW46IDEwcHggMTBweCAwIDA7XG4gICAgYm9yZGVyLXJhZGl1czogM3B4O1xuICAgIHBhZGRpbmc6IDhweDtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbn1cbi5tYXQtbGlzdC1pdGVtIGEuc3BhY2VkOmhvdmVye1xuICAgIGJveC1zaGFkb3c6IDBweCAwcHggMnB4IDFweCByZ2JhKDAsMCwwLDAuNCk7IFxufVxuLm1hdC1saXN0LWl0ZW0gYS5kYW5nZXJ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdG9tYXRvO1xufVxuLm1hdC1saXN0LWl0ZW0gYS5uby1kYW5nZXJ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjp5ZWxsb3dncmVlbjtcbn1cblxuLm1hdC1saXN0LWJhc2V7XG4gICAgd2lkdGg6MTAwJTtcbn1cblxuZGwge1xuICAgIGJhY2tncm91bmQ6ICNmOWY5Zjk7XG4gICAgcGFkZGluZzogMTBweDtcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gIFxuICBkdCB7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gIH1cbiAgXG4gIGRkIHtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgfSJdfQ== */\"","module.exports = \"\\n<!-- <ul>\\n  <li *ngFor=\\\"let codecamp of codecamps\\\">\\n    {{codecamp.name}} - {{codecamp.venue}} | <button [routerLink]=\\\"['/update', codecamp.campId]\\\">update</button>\\n    | <button (click)=\\\"deleteCodecamp(codecamp.venue)\\\">delete</button>\\n  </li>\\n</ul> -->\\n\\n\\n<mat-accordion>\\n\\n  <mat-expansion-panel *ngFor=\\\"let event of codecamps\\\">\\n    <mat-expansion-panel-header>\\n      {{event.name}}\\n    </mat-expansion-panel-header>\\n    <mat-list role=\\\"list\\\">\\n      <mat-list-item role=\\\"listitem\\\">\\n        <mat-icon color=\\\"warn\\\">location_on</mat-icon> <span class=\\\"align-right\\\">{{event.venue}}</span>\\n      </mat-list-item>\\n      <mat-list-item role=\\\"listitem\\\">\\n        <mat-icon color=\\\"warn\\\">access_time</mat-icon> <span class=\\\"align-right\\\">{{event.duration}} hr<span *ngIf=\\\"event.duration > 1\\\">s</span></span>\\n      </mat-list-item>\\n      <mat-list-item role=\\\"listitem\\\">\\n        <mat-icon color=\\\"warn\\\">date_range</mat-icon> <span\\n          class=\\\"align-right\\\">{{event.eventDate | date:'mediumDate'}}</span>\\n      </mat-list-item>\\n      <div class=\\\"talks-div\\\" *ngIf=\\\"event.talks!=undefined && event.talks.length>0\\\">\\n          <h3>Talks</h3>\\n          <ng-container *ngFor=\\\"let talk of event.talks\\\">\\n            <mat-list-item role=\\\"listitem\\\">\\n                <mat-list>\\n                  <mat-list-item>\\n                    <dl>\\n                      <dt>{{talk.title}}</dt>\\n                      <dd style=\\\"font-size: 0.75em;\\\">{{talk.speaker.firstName}} {{talk.speaker.lastName}}</dd>\\n                    </dl> \\n                  </mat-list-item>\\n                </mat-list>\\n            </mat-list-item>\\n          </ng-container>\\n        </div>\\n      <mat-list-item role=\\\"listitem\\\">\\n        <a class=\\\"list-group-item list-group-item-action spaced no-danger\\\" [routerLink]=\\\"['/update', event.campId]\\\">Edit Event</a>\\n        <a class=\\\"list-group-item list-group-item-action spaced danger\\\" (click)=\\\"deleteCodecamp(event.venue)\\\">Delete Event</a>\\n      </mat-list-item>\\n    </mat-list>\\n\\n  </mat-expansion-panel>\\n\\n</mat-accordion>\"","import { Component, OnInit } from '@angular/core';\nimport { CodecampService } from '../services/codecamp.service';\nimport { CodeCamp } from '../entities/codecamp';\n\n@Component({\n  selector: 'app-codecamps',\n  templateUrl: './codecamps.component.html',\n  styleUrls: ['./codecamps.component.css']\n})\nexport class CodecampsComponent implements OnInit {\n\n  // codecamps = [\n  //   {\n  //     name: 'Codecamp 1',\n  //     venue: 'Glasgow'\n\n  //   },\n  //   {\n  //     name: 'Codecamp 2',\n  //     venue: 'Edinburgh'\n\n  //   }\n  // ];\n  codecamps: CodeCamp[];\n\n  constructor(private codecampService: CodecampService) {}\n\n  ngOnInit() {\n    this.getAllCodecamps();\n  }\n\n  getAllCodecamps(): void {\n    this.codecampService.getAllCodecamps().subscribe(events => {this.codecamps = events; console.log(this.codecamps)});\n  }\n\n  deleteCodecamp(venue: any): void {\n    if (confirm('Are you sure?')) {\n      this.codecampService.deleteCodecamp(venue).subscribe((events) => {this.getAllCodecamps(); }, (err) => {console.log(err); });\n    }\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NyZWF0ZS1jb2RlY2FtcC9jcmVhdGUtY29kZWNhbXAuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h3>Add New Codecamp</h3>\\n<!-- <form class=\\\"formwidth\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n  <div class=\\\"example-full-width\\\">\\n    <input required  placeholder=\\\"Title\\\" id=\\\"name\\\" [(ngModel)]=\\\"codecamp.name\\\" name=\\\"name\\\">\\n  </div>\\n  <div class=\\\"example-full-width\\\">\\n    <input required  placeholder=\\\"Venue\\\" id=\\\"venue\\\" [(ngModel)]=\\\"codecamp.venue\\\" name=\\\"venue\\\">\\n  </div>\\n  <div>\\n      <input type=\\\"date\\\" required placeholder=\\\"Choose a date\\\" [(ngModel)]=\\\"codecamp.eventDate\\\" name=\\\"eventDate\\\" >\\n    </div>\\n  <div class=\\\"example-full-width\\\">\\n    <input type=\\\"number\\\" required  placeholder=\\\"Duration\\\" id=\\\"duration\\\" [(ngModel)]=\\\"codecamp.duration\\\"\\n      name=\\\"duration\\\">\\n  </div></form> -->\\n<form class=\\\"formwidth\\\" (ngSubmit)=\\\"onSubmit()\\\" #myForm=\\\"ngForm\\\">\\n  <div>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input required matInput placeholder=\\\"Title\\\" id=\\\"name\\\" [(ngModel)]=\\\"codecamp.name\\\" name=\\\"name\\\">\\n    </mat-form-field>\\n  </div>\\n  <div>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input required matInput placeholder=\\\"Venue\\\" id=\\\"venue\\\" [(ngModel)]=\\\"codecamp.venue\\\" name=\\\"venue\\\">\\n    </mat-form-field>\\n  </div>\\n  <!-- <mat-form-field class=\\\"example-full-width\\\">\\n    <input type=\\\"date\\\" required matInput placeholder=\\\"Date\\\" id=\\\"ccDate\\\" [(ngModel)]=\\\"event.ccDate\\\" name=\\\"ccDate\\\">\\n  </mat-form-field> -->\\n  <div>\\n    <mat-form-field>\\n      <input required matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\"\\n        [(ngModel)]=\\\"codecamp.eventDate\\\" name=\\\"eventDate\\\" #ccDate>\\n      <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n      <mat-datepicker #picker></mat-datepicker>\\n    </mat-form-field>\\n  </div>\\n  <div>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input type=\\\"number\\\" required matInput placeholder=\\\"Duration\\\" id=\\\"duration\\\" [(ngModel)]=\\\"codecamp.duration\\\"\\n        name=\\\"duration\\\">\\n    </mat-form-field>\\n  </div>\\n  <button mat-flat-button color=\\\"warn\\\">Create Codecamp</button>\\n</form>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { CodeCamp } from '../entities/codecamp';\nimport { CodecampService } from '../services/codecamp.service';\n\n@Component({\n  selector: 'app-create-codecamp',\n  templateUrl: './create-codecamp.component.html',\n  styleUrls: ['./create-codecamp.component.css']\n})\nexport class CreateCodecampComponent implements OnInit {\n  codecamp: CodeCamp = new CodeCamp();\n  constructor(private codecampService: CodecampService) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit() {\n    this.codecampService.createCodecamp(this.codecamp).subscribe(returnedData => {\n      console.log(returnedData);\n      this.codecamp = new CodeCamp(); // to clear the form\n    });\n  }\n\n}\n","import { Talk } from './talk';\n\nexport class CodeCamp {\n  constructor(\n    public campId?: number,\n    public name?: string,\n    public venue?: string,\n    public eventDate?: string,\n    public duration?: number,\n    public talks?: Array<Talk>\n  ) {}\n}\n","export class Speaker {\n    constructor(\n      public speakerId?: number,\n      public firstName?: string,\n      public lastName?: string,\n      public company?: string ,\n      public companyUrl?: string\n    ) {}\n  }","import { Speaker } from './speaker';\n\nexport class Talk {\n  constructor(\n    public talkId?: number,\n    public title?: string,\n    public speaker?: Speaker\n  ) {}\n}\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CodeCamp } from '../entities/codecamp';\nimport { Observable } from 'rxjs';\nimport { Talk } from '../entities/talk';\nimport { Speaker } from '../entities/speaker';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CodecampService {\n  // apiUrl = 'https://backendrepo.azurewebsites.net/api/camps/';\n  apiUrl = 'https://indicia-webapi.azurewebsites.net/api/camps/';\n\n  headers = {\n    headers: new HttpHeaders({'Content-Type': 'application/json; charset=utf-8', 'X-Requested-With': 'XMLHttpRequest'})\n  };\n\n  constructor(private http: HttpClient) { }\n\n  getAllCodecamps(): Observable<CodeCamp[]> {\n    return this.http.get<CodeCamp[]>(this.apiUrl + '?includeTalks=true');\n  }\n\n  getCodecampById(id: number): Observable<CodeCamp> {\n    return this.http.get<CodeCamp>(this.apiUrl + id + '?includeTalks=true');\n  }\n\n  createCodecamp(codecamp: CodeCamp): Observable<any> {\n    return this.http.post<CodeCamp>(this.apiUrl , codecamp, this.headers);\n  }\n\n  deleteCodecamp(venue: string): Observable<any> {\n    return this.http.delete<CodeCamp>(this.apiUrl  + venue,  this.headers);\n  }\n\n  updateCodecamp(codecamp: CodeCamp): Observable<CodeCamp> {\n    return this.http.put<CodeCamp>(this.apiUrl + codecamp.venue, codecamp, this.headers);\n  }\n\n  getSpeakers(): Observable<Speaker[]> {\n    return this.http.get<Speaker[]>('https://backendrepo.azurewebsites.net/api/Speakers');\n  }\n\n  addTalk(venue: string, talk: Talk): Observable<any> {\n    return this.http.post<Talk>(this.apiUrl  + venue + '/talks', talk, this.headers);\n  }\n\n  deleteTalk(id: number, venue: string): Observable<any> {\n    return this.http.delete<Talk>(this.apiUrl + venue + '/Talks/'  + id,  this.headers);\n  }\n\n\n}\n","module.exports = \".mat-list-base .mat-list-item:nth-child(even){\\n    background: #f00;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXBkYXRlLWNvZGVjYW1wL3VwZGF0ZS1jb2RlY2FtcC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvdXBkYXRlLWNvZGVjYW1wL3VwZGF0ZS1jb2RlY2FtcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1saXN0LWJhc2UgLm1hdC1saXN0LWl0ZW06bnRoLWNoaWxkKGV2ZW4pe1xuICAgIGJhY2tncm91bmQ6ICNmMDA7XG59Il19 */\"","module.exports = \"\\n<h3>Update Codecamp: {{codecamp.name}}</h3>\\n<!-- <form class=\\\"formwidth\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n  <div class=\\\"example-full-width\\\">\\n    <input required  placeholder=\\\"Title\\\" id=\\\"name\\\" [(ngModel)]=\\\"codecamp.name\\\" name=\\\"name\\\">\\n  </div>\\n  <div class=\\\"example-full-width\\\">\\n    <input required  placeholder=\\\"Venue\\\" id=\\\"venue\\\" [(ngModel)]=\\\"codecamp.venue\\\" name=\\\"venue\\\">\\n  </div>\\n  <div>\\n      <input required placeholder=\\\"Choose a date\\\" [(ngModel)]=\\\"codecamp.eventDate\\\" name=\\\"eventDate\\\" >\\n    </div>\\n  <div class=\\\"example-full-width\\\">\\n    <input type=\\\"number\\\" required  placeholder=\\\"Duration\\\" id=\\\"duration\\\" [(ngModel)]=\\\"codecamp.duration\\\"\\n      name=\\\"duration\\\">\\n  </div>\\n  <button>Update Codecamp</button>\\n</form> -->\\n\\n<form class=\\\"formwidth\\\" (ngSubmit)=\\\"onSubmit()\\\" #myForm=\\\"ngForm\\\">\\n  <div>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n\\n      <input required matInput placeholder=\\\"Title\\\" id=\\\"name\\\" [(ngModel)]=\\\"codecamp.name\\\" name=\\\"name\\\">\\n    </mat-form-field>\\n  </div>\\n  <div>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n\\n      <input required matInput placeholder=\\\"Venue\\\" id=\\\"venue\\\" [(ngModel)]=\\\"codecamp.venue\\\" name=\\\"venue\\\">\\n    </mat-form-field>\\n  </div>\\n  <div>\\n    <mat-form-field>\\n      <input required matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\" [(ngModel)]=\\\"codecamp.eventDate\\\"\\n        name=\\\"eventDate\\\" #ccDate>\\n      <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n      <mat-datepicker #picker></mat-datepicker>\\n    </mat-form-field>\\n  </div>\\n  <div>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input type=\\\"number\\\" required matInput placeholder=\\\"Duration\\\" id=\\\"duration\\\" [(ngModel)]=\\\"codecamp.duration\\\"\\n        name=\\\"duration\\\">\\n    </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"talks-div\\\" *ngIf=\\\"codecamp.talks!=undefined && codecamp.talks.length>0\\\">\\n    <h3>Talks</h3>\\n    <ng-container *ngFor=\\\"let talk of codecamp.talks\\\">\\n      <mat-list-item role=\\\"listitem\\\">\\n        <mat-list>\\n          <mat-list-item>\\n            <dl>\\n              <dt contenteditable=\\\"true\\\" id=\\\"talkTitle{{talk.talkId}}\\\">{{talk.title}}</dt>\\n              <dd style=\\\"font-size: 0.75em;\\\">{{talk.speaker.firstName}} {{talk.speaker.lastName}}\\n                <button type=\\\"button\\\" mat-flat-button color=\\\"warn\\\" style=\\\"position:absolute;right:0;top:0;\\\" (click)=\\\"deleteTalk(talk.talkId)\\\">Delete Talk</button>\\n              </dd>\\n            </dl>\\n          </mat-list-item>\\n        </mat-list>\\n      </mat-list-item>\\n    </ng-container>\\n  </div>\\n\\n  <h3>Add New Talk to {{codecamp.name}}</h3>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input type=\\\"text\\\" matInput placeholder=\\\"New Talk Title\\\" id=\\\"newTalkTitle\\\" name=\\\"newTalkTitle\\\"\\n        [(ngModel)]=\\\"talk.title\\\">\\n    </mat-form-field>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n        <mat-select #speakerSelect  id=\\\"speakers\\\" name=\\\"speakers\\\" [(ngModel)]=\\\"speaker.speakerId\\\">\\n          <mat-option value=\\\"{{speaker.speakerId}}\\\" *ngFor=\\\"let speaker of speakers\\\">{{speaker.firstName}} {{speaker.lastName}}</mat-option>\\n        </mat-select>\\n    </mat-form-field>\\n    <div>\\n      <button type=\\\"button\\\" mat-flat-button color=\\\"accent\\\" (click)=\\\"addTalk()\\\">Add Talk to Codecamp</button>\\n    </div>\\n    <div style=\\\"margin-top: 10px;\\\">\\n      <button mat-flat-button color=\\\"warn\\\" style=\\\"margin-bottom: 10px;\\\">Save Changes</button>\\n    </div>\\n\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { CodeCamp } from '../entities/codecamp';\nimport { CodecampService } from '../services/codecamp.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Talk } from '../entities/talk';\nimport { Speaker } from '../entities/speaker';\n\n\n@Component({\n  selector: 'app-update-codecamp',\n  templateUrl: './update-codecamp.component.html',\n  styleUrls: ['./update-codecamp.component.css']\n})\nexport class UpdateCodecampComponent implements OnInit {\n  campId: any;\n  codecamps: CodeCamp[];\n  codecamp: CodeCamp = new CodeCamp();\n  talk: Talk = new Talk();\n  speaker: Speaker = new Speaker();\n  speakers: Speaker[];\n  constructor(private codecampService: CodecampService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.getCodecampById();\n    this.getSpeakers();\n  }\n\n  getSpeakers() {\n    this.codecampService.getSpeakers().subscribe(returnedData => {\n      this.speakers = returnedData;\n      console.log(returnedData);\n    });\n  }\n\n  getCodecampById() {\n\n    // get the camp ID from the URL parameters\n    this.route.params.subscribe(params => {\n      this.campId = params.id;\n      console.log(this.campId);\n    });\n\n    this.codecampService.getCodecampById(this.campId).subscribe(codecamp => this.codecamp = codecamp);\n  }\n\n  onSubmit() {\n    console.log('Submit called');\n    console.log(this.codecamp);\n    // this.codecamp.talks = [];\n    this.codecampService.updateCodecamp(this.codecamp).subscribe(returnedData =>    console.log(returnedData) );\n  }\n\n  addTalk() {\n    // get the speaker\n    // for (const speaker of this.speakers) {\n    //   if (speaker.speakerId === Number(select.value)) {\n    //     this.speaker = speaker;\n    //   }\n    // }\n    this.talk.speaker = this.speaker;\n    console.log(this.speaker);\n    this.codecampService.addTalk(this.codecamp.venue, this.talk).subscribe(talk => {\n      alert('Talk Added');\n      this.getCodecampById();\n      this.talk = new Talk(); // clear the form\n      this.speaker = new Speaker();\n    });\n  }\n\n  deleteTalk(id) {\n    this.codecampService.deleteTalk(id, this.codecamp.venue).subscribe(returnedData => this.getCodecampById());\n  }\n}\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}